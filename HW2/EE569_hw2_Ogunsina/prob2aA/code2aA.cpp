//  EE569 Homework Assignment # 2 Prob 2a A//  Name:   Morayo Abisola Ogunsina//  ID:     7371213793//  Date:   02/23/2021//  email:  ogunsina@usc.edu // To run the code : // 1. Use terminal and navigate to code path = /prob2aA // 2. type in g++ -o prob2aA code2aA.cpp // 3. then prob2aA.exe <input_raw> <image width> <image height> <threshold_val> // e.g prob2aA.exe bridge.raw bridgeFixed_64.raw 332 501 64 // to view output on ImageJ: // 1. import raw output file // 2. select image type 8-bit RGB // 3. set width to 332, height to 501 // 4. OK.#include <iostream>#include <iomanip>#include <math.h>#include <string.h>#include <stdio.h>#include <iostream>#include <stdlib.h>using namespace std; int main(int argc, char* argv[]){	///////////////////////// BEGINNING CODE PROVIDED BY TA, ADDED MODIFICATIONS /////////////////////////	// Define file pointer and variables	FILE* file;	//---------------------------------Get aruguments------------------------------------------   	int ImgWidth = atoi(argv[3]);   // number of columns in the image,	int ImgHeight = atoi(argv[4]);  // number of rows in the image	int threshold = atoi(argv[5]);  // get threshold value, T	const int SIZE = ImgHeight * ImgWidth;  	//----------------variables	unsigned char* Imagedata = new unsigned char[SIZE]();           // input image	unsigned char* OuputdataTreshold = new unsigned char[SIZE];     // output, fixedthreshold			//--------------------------read image----------------------------	if (!(file = fopen(argv[1], "rb"))) {		cout << "Cannot open file: " << argv[1] << endl;		exit(1);	}	fread(Imagedata, sizeof(unsigned char), SIZE, file);	fclose(file);	///////////////////////// INSERT YOUR PROCESSING CODE HERE /////////////////////////	// transform 1d image data to 2D array --------	unsigned char** imageData2D = new unsigned char* [ImgHeight];		long int count = 0;	for (int i = 0; i < ImgHeight; i++) {		imageData2D[i] = new unsigned char [ImgWidth];		for (int j = 0; j < ImgWidth; j++) {			imageData2D[i][j] = Imagedata[count];			count++;		}	}	//--------------------- temp memory for FixedTrheshold Array-------------------------	unsigned char** fixedThreshOutput = new unsigned char* [ImgHeight];	for (int i = 0; i < ImgHeight; ++i) {		fixedThreshOutput[i] = new unsigned char[ImgWidth];	}		//--------------------- Apply FixedTrheshold here-------------------------	//               0   if 0 <= F(i,j) < T	// G(i,j) =     255  if T <= F(i,j) < 255		for (int h = 0; h < ImgHeight; h++) {		for (int w = 0; w < ImgWidth; w++) {			int pixel = (int)imageData2D[h][w];			if (pixel < threshold) 				fixedThreshOutput[h][w] = 0;						else if (pixel >= threshold) 				fixedThreshOutput[h][w] = 255;					}	}	//--------------------------convert back to 1d --------------------------------------	int c = 0;	for (int i = 0; i < ImgHeight; i++) {		for (int j = 0; j < ImgWidth; j++) {			OuputdataTreshold[c] = fixedThreshOutput[i][j];			c++;		}	}		//--------------------------save FixedTreshold image to File--------------------------------------	if (!(file = fopen(argv[2], "wb"))) {		cout << "Cannot open file: " << argv[3] << endl;		exit(1);	}	fwrite(OuputdataTreshold, sizeof(unsigned char), SIZE, file);	fclose(file);	delete[] Imagedata;	delete[] fixedThreshOutput;	delete[] OuputdataTreshold;		return 0;}